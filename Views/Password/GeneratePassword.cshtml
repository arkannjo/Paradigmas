
@model Paradigmas.Models.PasswordModel


<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
@{
    ViewBag.Title = "Gerador de Senhas";
}

<div class="container">
    <div class="row">
        <div class="col-md-6 offset-md-3 mt-5">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h2 class="text-center">@ViewBag.Title</h2>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            @Html.LabelFor(model => model.Tamanho, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Tamanho, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "1", @max = "50", @required = "required", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Tamanho, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <div class="form-check form-check-inline">
                                @Html.LabelFor(model => model.IncluirLetrasMinusculas, htmlAttributes: new { @class = "form-check-label" })
                                @Html.EditorFor(model => model.IncluirLetrasMinusculas, new { htmlAttributes = new { @class = "form-check-input" } })
                            </div>
                            <div class="form-check form-check-inline">
                                @Html.LabelFor(model => model.IncluirLetrasMaiusculas, htmlAttributes: new { @class = "form-check-label" })
                                @Html.EditorFor(model => model.IncluirLetrasMaiusculas, new { htmlAttributes = new { @class = "form-check-input" } })
                            </div>
                            <div class="form-check form-check-inline">
                                @Html.LabelFor(model => model.IncluirNumeros, htmlAttributes: new { @class = "form-check-label" })
                                @Html.EditorFor(model => model.IncluirNumeros, new { htmlAttributes = new { @class = "form-check-input" } })
                            </div>
                            <div class="form-check form-check-inline">
                                @Html.LabelFor(model => model.IncluirCaracteresEspeciais, htmlAttributes: new { @class = "form-check-label" })
                                @Html.EditorFor(model => model.IncluirCaracteresEspeciais, new { htmlAttributes = new { @class = "form-check-input" } })
                            </div>
                        </div>
                        <div class="form-group">
                            <button type="submit" class="btn btn-primary btn-block">Gerar Senha</button>
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(Model.Senha))
                    {
                        <div class="form-group senha-group">
                                @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label" })
                                @Html.DisplayFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="form-group senha-group">
                                @Html.LabelFor(model => model.ForcaSenha, htmlAttributes: new { @class = "control-label" }) 
                                @Html.DisplayFor(model => model.ForcaSenha, new { htmlAttributes = new { @class = "form-control" } })
                        </div>

                   }

</div>
</div>
</div>
</div>

</div>

