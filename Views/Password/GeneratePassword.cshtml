@model Paradigmas.Models.PasswordModel

<h2>Gerador de Senhas</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.Tamanho, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tamanho, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tamanho, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <div class="checkbox">
                @Html.LabelFor(model => model.IncluirLetrasMinusculas)
                @Html.EditorFor(model => model.IncluirLetrasMinusculas)
                @Html.ValidationMessageFor(model => model.IncluirLetrasMinusculas, "", new { @class = "text-danger" })
            </div>
            <div class="checkbox">
                @Html.LabelFor(model => model.IncluirLetrasMaiusculas)
                @Html.EditorFor(model => model.IncluirLetrasMaiusculas)
                @Html.ValidationMessageFor(model => model.IncluirLetrasMaiusculas, "", new { @class = "text-danger" })
            </div>
            <div class="checkbox">
                @Html.LabelFor(model => model.IncluirNumeros)
                @Html.EditorFor(model => model.IncluirNumeros)
                @Html.ValidationMessageFor(model => model.IncluirNumeros, "", new { @class = "text-danger" })
            </div>
            <div class="checkbox">
                @Html.LabelFor(model => model.IncluirCaracteresEspeciais)
                @Html.EditorFor(model => model.IncluirCaracteresEspeciais)
                @Html.ValidationMessageFor(model => model.IncluirCaracteresEspeciais, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Gerar Senha" class="btn btn-default" />
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.Senha))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ForcaSenha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ForcaSenha, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
    }
}
